@page "/"
@page "/{ChatHistoryId:long}"


<div class="d-flex align-center">
    <MudText Typo="Typo.h3" Class="mr-auto">
        Code Converter
    </MudText>
</div>

@if (User is null)
{
    <MudAlert Severity=Severity.Warning Icon="@Icons.Material.Outlined.Warning">
        An Open AI API key has not been set. Retrieve an API key from the Open AI website, creating an account if necessary, and then navigate to <MudLink Href="settings">settings</MudLink> and add an API key.
    </MudAlert>
}
else
{
    <EditForm Model="_convertCodeModel" OnValidSubmit="OnValidSubmitAsync">
        <DataAnnotationsValidator />
        <MudGrid>
            <MudItem xs="12" Class="d-flex align-end">
                <MudSelect @bind-Value=_convertCodeModel.Source Label="Source">
                    @foreach(var item in Enum.GetValues<ConvertCodeCommand.ConvertCodeOption>())
                    {
                        <MudSelectItem Value=item>@item.GetDisplayName()</MudSelectItem>
                    }
                </MudSelect>
                <MudIcon Icon="@Icons.Material.Outlined.ArrowForward" Class="mx-3"></MudIcon>
                <MudSelect @bind-Value=_convertCodeModel.Destination Label="Source">
                    @foreach (var item in Enum.GetValues<ConvertCodeCommand.ConvertCodeOption>())
                    {
                        <MudSelectItem Value=item>@item.GetDisplayName()</MudSelectItem>
                    }
                </MudSelect>
            </MudItem>

            <MudItem xs="12">
                <MudFileUpload Context="fileUploadContext" T="IBrowserFile" OnFilesChanged="OnFileUploadAsync">
                    <ButtonTemplate>
                        <MudButton HtmlTag="label"
                               Variant="Variant.Filled"
                               Color="Color.Primary"
                               StartIcon="@Icons.Material.Filled.CloudUpload"
                               Size="Size.Large"
                                   for="@fileUploadContext">
                            Upload File
                        </MudButton>
                    </ButtonTemplate>
                </MudFileUpload>
            </MudItem>

            <MudItem xs="12" Class="pb-0">
                <h3>OR</h3>
            </MudItem>
            <MudItem xs="12" Class="pb-0">
                <h3>Paste your code</h3>
            </MudItem>
            <MudItem xs="12">
                <AdaptiveTextArea @bind-Value="_convertCodeModel.Code" Placeholder="Enter your code..." />
            </MudItem>
            <MudItem xs="12">
                <MudButton Disabled="@_isGenerating" ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" StartIcon="@Icons.Material.Outlined.Refresh">
                    Generate Code
                </MudButton>
            </MudItem>
            <MudItem md="2" sm="12">
                <MudSelect Label="Testing Framework" Variant="Variant.Text" @bind-Value="_generateTestsModel.Framework">
                    @foreach (var item in Enum.GetValues<GenerateTestsCommand.TestFramework>())
                    {
                        <MudSelectItem Value=item>@item.GetDisplayName()</MudSelectItem>
                    }
                </MudSelect>
            </MudItem>
            <MudItem xs="12">
                <MudButton Disabled="GenerateTestsButtonIsDisabled" ButtonType="ButtonType.Button" OnClick="GenerateTests" Variant="Variant.Filled" Color="Color.Primary" StartIcon="@Icons.Material.Outlined.Refresh">
                    Generate Tests
                </MudButton>
            </MudItem>
            <MudItem xs="12">
                @if (_isGenerating)
                {
                    <MudProgressLinear Color="Color.Primary" Indeterminate="@_isGenerating" Striped=true />
                }
            </MudItem>
            <ChatWindow Conversation="CodeConverterState.Conversation"></ChatWindow>
        </MudGrid>
    </EditForm>
}