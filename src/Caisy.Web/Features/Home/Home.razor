@page "/"

<div style="display: flex; align-items: center;">
    <h1 style="margin-right: auto;">Code Converter</h1>
    <div id="new-chat-button">
        <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary">
            + New Chat
        </MudButton>
    </div>
</div>

@if (ProfileState.Id is null)
{
    <MudAlert Severity=Severity.Warning Icon="@Icons.Material.Outlined.Warning">
        An api key has not been set. Please go to your <MudLink Href="profile">profile</MudLink> and add an API key.
    </MudAlert>
}
else
{
    <EditForm Model="_request">
        <DataAnnotationsValidator />
        <MudGrid>
            <MudItem xs="12" Class="d-flex align-end">
                <MudSelect Value=_source Label="Source" ValueChanged="@(EventCallback.Factory.Create<string>(this, OnSourceChangedAsync))">
                    <MudSelectItem Value="@("SQL")">SQL</MudSelectItem>
                    <MudSelectItem Value="@("Entity Framework")">Entity Framework</MudSelectItem>
                    <MudSelectItem Value="@("Dapper")">Dapper</MudSelectItem>
                    <MudSelectItem Value="@("ADO.NET")">ADO.NET</MudSelectItem>
                </MudSelect>
                <MudIcon Icon="@Icons.Material.Outlined.ArrowForward" Class="mx-3"></MudIcon>
                <MudSelect Value=_destination Label="Destination" ValueChanged="@(EventCallback.Factory.Create<string>(this, OnDestinationChangedAsync))">
                    <MudSelectItem Value=@("SQL")>SQL</MudSelectItem>
                    <MudSelectItem Value=@("Entity Framework")>Entity Framework</MudSelectItem>
                    <MudSelectItem Value="@("Dapper")">Dapper</MudSelectItem>
                    <MudSelectItem Value="@("ADO.NET")">ADO.NET</MudSelectItem>
                </MudSelect>
            </MudItem>

            <MudItem xs="12">
                <MudFileUpload Context="fileUploadContext" T="IBrowserFile" OnFilesChanged="OnFileUploadAsync">
                    <ButtonTemplate>
                        <MudButton HtmlTag="label"
                               Variant="Variant.Filled"
                               Color="Color.Primary"
                               StartIcon="@Icons.Material.Filled.CloudUpload"
                                   for="@fileUploadContext">
                            Upload File
                        </MudButton>
                    </ButtonTemplate>
                </MudFileUpload>
            </MudItem>

            <MudItem xs="12" Class="pb-0">
                <h3>OR</h3>
            </MudItem>
            <MudItem xs="12" Class="pb-0">
                <h3>Paste your code</h3>
            </MudItem>

            <MudItem xs="12">
                <AdaptiveTextArea @bind-Value="_request.Prompt" Placeholder="Enter your code..."/>
            </MudItem>
            <MudItem xs="2">
                <MudSelect Label="Testing Framework" Variant="Variant.Text" @bind-Value="_request.TestCaseFramework">
                    <MudSelectItem Value="@("XUnit")" />
                    <MudSelectItem Value="@("MSTest")" />
                </MudSelect>
            </MudItem>
            <MudItem xs="12">
                <MudButton Disabled="@_isInProgress" ButtonType="ButtonType.Submit" OnClick="OnValidSubmitAsync" Variant="Variant.Filled" Color="Color.Primary" StartIcon="@Icons.Material.Outlined.Check">
                    Get Code
                </MudButton>
                <MudButton Disabled="@(_isInProgress || !_anyCode || (_destination == "SQL"))" ButtonType="ButtonType.Submit" OnClick="GetTestCaseResult" Variant="Variant.Filled" Color="Color.Primary" StartIcon="@Icons.Material.Outlined.Check">
                    Get Tests
                </MudButton>
            </MudItem>
            <MudItem xs="12">
                @if (_isInProgress)
                {
                    <MudProgressLinear Color="Color.Primary" Indeterminate="@_isInProgress" Striped=true />
                }
            </MudItem>
            @if (_conversation.Messages.Count > 1)
            {
                <MudItem xs="12">
                    <div class="chat-container">

                        <MudTimeline TimelinePosition="TimelinePosition.Start">
                            @foreach (var message in _conversation.Messages)
                            {
                                if (message.Role == OpenAI_API.Chat.ChatMessageRole.System) continue;
                                var isUserMessage = message.Role == OpenAI_API.Chat.ChatMessageRole.User;
                                var color = isUserMessage ? Color.Dark : Color.Primary;
                                var icon = isUserMessage ? Icons.Material.Outlined.Person : Icons.Material.Outlined.Computer;

                                <MudTimelineItem Color="color" Size="Size.Large" Elevation="0">
                                    <ItemDot>
                                        @if (isUserMessage)
                                        {
                                            <MudIcon Icon="@icon"></MudIcon>
                                        }
                                        else
                                        {
                                            <MudImage Src="caisy.png" Height="30" />
                                        }

                                    </ItemDot>
                                    <ItemContent>
                                        <MudAlert Severity="Severity.Normal" NoIcon=true>
                                            <MudMarkdown Value="@message.Content" CodeBlockTheme="CodeBlockTheme.AtomOneDark" />
                                        </MudAlert>
                                    </ItemContent>
                                </MudTimelineItem>
                            }
                        </MudTimeline>
                    </div>
                </MudItem>
            }
        </MudGrid>
    </EditForm>
}
