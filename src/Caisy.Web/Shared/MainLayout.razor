@using Caisy.Web.Features.Profile;
@implements IDisposable
@inherits LayoutComponentBase

<CascadingValue Value="ProfileState">
    <MudLayout>
        <MudAppBar Color="Color.Primary">
            <MudIconButton Icon="@Icons.Material.Outlined.Menu" OnClick="DrawerToggle" />
            <MudImage Src="favicon.ico" /> <MudText Typo="Typo.h4">c<b><accent>AI</accent></b>sy</MudText>
        </MudAppBar>
        <MudDrawer @bind-Open="@_drawerOpen" Variant="@DrawerVariant.Temporary">
            <MudNavMenu>
                <MudNavLink Href="" Match="NavLinkMatch.All" Icon="@Icons.Material.Outlined.Home"><headerFont>Code Converter</headerFont></MudNavLink>
                <MudNavLink Href="Profile" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Outlined.PeopleAlt"><headerFont>Profile</headerFont></MudNavLink>
                <MudNavLink Href="ChatHistory" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.ChatBubbleOutline"><headerFont>Chat History</headerFont></MudNavLink>
                <MudNavLink Href="CodeReader" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.MenuBook"><headerFont>Code Reader</headerFont></MudNavLink>
            </MudNavMenu>
        </MudDrawer>
        <MudMainContent>
            <ChildContent>
                <MudMainContent Class="pt-2">
                    <MudContainer MaxWidth="MaxWidth.ExtraLarge">
                        <MudPaper Class="pa-4">
                            @Body
                        </MudPaper>
                    </MudContainer>
                </MudMainContent>
            </ChildContent>
        </MudMainContent>
    </MudLayout>
</CascadingValue>

<MudThemeProvider @ref=ProfileState.MudThemeProvider Theme=_baseTheme IsDarkMode=ProfileState.PrefersDarkMode />
<MudDialogProvider />
<MudSnackbarProvider />

@code {
    [Inject] public ProfileState ProfileState { get; set; } = null!;
    private bool _drawerOpen;

    protected override void OnInitialized()
    {
        ProfileState.OnUserSettingsChanged += StateHasChanged;
    }

    private void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    public void Dispose()
    {
        ProfileState.OnUserSettingsChanged -= StateHasChanged;
    }

    private static readonly string[] _headerFontFamily = new[] { "Orbitron", "sans-serif" };
    private MudTheme _baseTheme = new MudTheme()
        {
            Typography = new Typography
            {
                Default = new Default { FontFamily = new[] { "Roboto", "sans-serif" } },
                H1 = new H1 { FontFamily = _headerFontFamily },
                H2 = new H2 { FontFamily = _headerFontFamily },
                H3 = new H3 { FontFamily = _headerFontFamily },
                H4 = new H4 { FontFamily = _headerFontFamily },
                H5 = new H5 { FontFamily = _headerFontFamily },
                H6 = new H6 { FontFamily = _headerFontFamily }
            }
        };
}