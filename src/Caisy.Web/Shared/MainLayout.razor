@using Caisy.Web.Features.Settings
@implements IDisposable
@inherits LayoutComponentBase

<div>
    <MudLayout>
        <MudAppBar Color="Color.Dark">
            <MudImage Src="favicon.ico" /> 
            <MudText Typo="Typo.h4">c<span class="ai-header">AI</span>sy</MudText>
            <MudNavLink Href="" Icon="@Icons.Material.Outlined.ChangeCircle" IconColor="Color.Primary">Converter</MudNavLink>
            <MudNavLink Href="reader" Icon="@Icons.Material.Outlined.MenuBook" IconColor="Color.Primary">Reader</MudNavLink>
            <MudNavLink Href="history" Icon="@Icons.Material.Outlined.History" IconColor="Color.Primary">History</MudNavLink>
            <MudSpacer />
            <Settings />
        </MudAppBar>
        <MudMainContent>
            <MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="pt-2">
                <ErrorBoundary @ref="_errorBoundary">
                    <ChildContent>
                        @Body
                    </ChildContent>
                    <ErrorContent>
                        <ErrorHandler Exception="context"/>
                    </ErrorContent>
                </ErrorBoundary>
            </MudContainer>
        </MudMainContent>
    </MudLayout>
</div>

<MudThemeProvider @ref=ApplicationState.MudThemeProvider Theme=_baseTheme IsDarkMode="IdentityProvider.User?.PrefersDarkMode ?? false" />
<MudSnackbarProvider />

@code {
    [Inject] public IIdentityProvider IdentityProvider { get; set; } = null!;
    [Inject] public ApplicationState ApplicationState { get; set; } = null!;

    private ErrorBoundary? _errorBoundary;
    private static readonly string[] _headerFontFamily = new[] { "Orbitron", "sans-serif" };
    private MudTheme _baseTheme = new MudTheme
    {
        Typography = new Typography
        {
            Default = new Default { FontFamily = new[] { "Roboto", "sans-serif" } },
            H1 = new H1 { FontFamily = _headerFontFamily },
            H2 = new H2 { FontFamily = _headerFontFamily },
            H3 = new H3 { FontFamily = _headerFontFamily },
            H4 = new H4 { FontFamily = _headerFontFamily },
            H5 = new H5 { FontFamily = _headerFontFamily },
            H6 = new H6 { FontFamily = _headerFontFamily }
        },
        Palette = new PaletteLight
        {
            Primary = Colors.Pink.Default
        },
    };

    protected override void OnParametersSet()
    {
        _errorBoundary?.Recover();
    }

    protected override void OnInitialized()
    {
        ApplicationState.OnUserSettingsChanged += StateHasChanged;
    }

    public void Dispose()
    {
        ApplicationState.OnUserSettingsChanged -= StateHasChanged;
    }
}