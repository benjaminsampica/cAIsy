@using Caisy.Web.Features.Shared;
@implements IDisposable
@inherits LayoutComponentBase

<CascadingValue Value="IdentityProvider.User">
    <MudLayout>
        <MudAppBar Color="Color.Primary">
            <MudIconButton Icon="@Icons.Material.Outlined.Menu" OnClick="DrawerToggle" />
            <MudImage Src="favicon.ico" /> 
            <MudText Typo="Typo.h4">c<span class="ai-header">AI</span>sy</MudText>
        </MudAppBar>
        <MudDrawer @bind-Open="@_drawerOpen" Variant="@DrawerVariant.Temporary">
            <MudNavMenu>
                <MudNavLink Href="" Match="NavLinkMatch.All" Icon="@Icons.Material.Outlined.Home">Code Converter</MudNavLink>
                <MudNavLink Href="codeReader" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.MenuBook">Code Reader</MudNavLink>
                <MudNavLink Href="chatHistory" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.ChatBubbleOutline">Chat History</MudNavLink>
                <MudNavLink Href="settings" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Outlined.PeopleAlt">Settings</MudNavLink>
            </MudNavMenu>
        </MudDrawer>
        <MudMainContent>
            <ChildContent>
                <MudMainContent Class="pt-2">
                    <MudContainer MaxWidth="MaxWidth.ExtraLarge">
                        <MudPaper Class="pa-4">
                            @Body
                        </MudPaper>
                    </MudContainer>
                </MudMainContent>
            </ChildContent>
        </MudMainContent>
    </MudLayout>
</CascadingValue>

<MudThemeProvider @ref=ApplicationState.MudThemeProvider Theme=_baseTheme IsDarkMode="IdentityProvider.User?.PrefersDarkMode ?? false" />
<MudDialogProvider />
<MudSnackbarProvider />

@code {
    [Inject] public IIdentityProvider IdentityProvider { get; set; } = null!;
    [Inject] public ApplicationState ApplicationState { get; set; } = null!;
    private bool _drawerOpen;

    protected override void OnInitialized()
    {
        ApplicationState.OnUserSettingsChanged += StateHasChanged;
    }

    private void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    public void Dispose()
    {
        ApplicationState.OnUserSettingsChanged -= StateHasChanged;
    }

    private static readonly string[] _headerFontFamily = new[] { "Orbitron", "sans-serif" };
    private MudTheme _baseTheme = new MudTheme
    {
        Typography = new Typography
        {
            Default = new Default { FontFamily = new[] { "Roboto", "sans-serif" } },
            H1 = new H1 { FontFamily = _headerFontFamily },
            H2 = new H2 { FontFamily = _headerFontFamily },
            H3 = new H3 { FontFamily = _headerFontFamily },
            H4 = new H4 { FontFamily = _headerFontFamily },
            H5 = new H5 { FontFamily = _headerFontFamily },
            H6 = new H6 { FontFamily = _headerFontFamily }
        }
    };
}