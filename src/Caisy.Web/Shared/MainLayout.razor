@using Caisy.Web.Features.Profile;
@implements IDisposable
@inherits LayoutComponentBase

<CascadingValue Value="ProfileState">
    <MudLayout>
        <MudAppBar Color="Color.Primary">
            <MudIconButton Icon="@Icons.Material.Outlined.Menu" OnClick="DrawerToggle" />
            <MudImage Src="favicon.ico" /> <MudText Typo="Typo.h4"><headerFont>c<b><accent>AI</accent></b>sy</headerFont></MudText>
        </MudAppBar>
        <MudDrawer @bind-Open="@_drawerOpen" Variant="@DrawerVariant.Temporary">
            <MudNavMenu>
                <MudNavLink Href="" Match="NavLinkMatch.All" Icon="@Icons.Material.Outlined.Home">Code Converter</MudNavLink>
                <MudNavLink Href="Profile" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Outlined.PeopleAlt">Profile</MudNavLink>
                <MudNavLink Href="ChatHistory" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.ChatBubbleOutline">Chat History</MudNavLink>
                <MudNavLink Href="CodeReader" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.MenuBook">Code Reader</MudNavLink>
            </MudNavMenu>
        </MudDrawer>
        <MudMainContent>
            <ChildContent>
                <MudMainContent Class="pt-2">
                    <MudContainer MaxWidth="MaxWidth.ExtraLarge">
                        <MudPaper Class="pa-4">
                            @Body
                        </MudPaper>
                    </MudContainer>
                </MudMainContent>
            </ChildContent>
        </MudMainContent>
    </MudLayout>
</CascadingValue>

<MudThemeProvider @ref=ProfileState.MudThemeProvider IsDarkMode=ProfileState.PrefersDarkMode />
<MudDialogProvider />
<MudSnackbarProvider />

@code {
    [Inject] public ProfileState ProfileState { get; set; } = null!;
    private bool _drawerOpen;

    protected override void OnInitialized()
    {
        ProfileState.OnUserSettingsChanged += StateHasChanged;
    }

    private void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    public void Dispose()
    {
        ProfileState.OnUserSettingsChanged -= StateHasChanged;
    }
}