@inherits LayoutComponentBase

<MudLayout>
    <MudAppBar Color="Color.Primary">
        <MudIconButton Icon="@Icons.Material.Outlined.Menu" OnClick="DrawerToggle" />
        <MudImage Src="favicon.ico" /> <MudText Typo="Typo.h6">cAIsy</MudText>
    </MudAppBar>
    <MudDrawer @bind-Open="@_drawerOpen" Variant="@DrawerVariant.Temporary">
        <MudNavMenu>
            <MudNavLink Href="/" Match="NavLinkMatch.All" Icon="@Icons.Material.Outlined.Home">Code Converter</MudNavLink>
            <MudNavLink Href="/Profile" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Outlined.PeopleAlt">Profile</MudNavLink>
            <MudNavLink Href="/ChatHistory" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.ChatBubbleOutline">Chat History</MudNavLink>
        </MudNavMenu>
    </MudDrawer>
    <MudMainContent>
        <ChildContent>
            <MudMainContent Class="pt-2">
                <MudContainer MaxWidth="MaxWidth.ExtraLarge">
                    <MudPaper Class="pa-4">
                        @Body
                    </MudPaper>
                </MudContainer>
            </MudMainContent>
        </ChildContent>
    </MudMainContent>
</MudLayout>

<MudThemeProvider @ref=_mudThemeProvider IsDarkMode=_isDarkMode />
<MudDialogProvider />
<MudSnackbarProvider />

@code {
    private MudThemeProvider? _mudThemeProvider;
    private bool _isDarkMode;
    private bool _drawerOpen;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _isDarkMode = await _mudThemeProvider!.GetSystemPreference();
            StateHasChanged();
        }
    }

    private void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
}